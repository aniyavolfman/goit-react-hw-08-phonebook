{"version":3,"file":"static/js/650.aadf5f7f.chunk.js","mappings":"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","sources":["redux/filter/filterSelector.js","redux/contacts/contactsSelectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const getContactsFilter = state => state.filterData;\n","import { getContactsFilter } from \"redux/filter/filterSelector\";\n\nexport const getContactsList = state => state.contactData.contacts.items;\nexport const getLoaderStatus = state => state.contactData.isLoading;\nexport const getError = state => state.contactData.error;\n\nexport const getFilterContacts = state => {\n  const contacts = getContactsList(state);\n  const filter = getContactsFilter(state);\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().trim().includes(filter.toLowerCase())\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonDelete\":\"ContactListItem_buttonDelete__965SC\"};","import PropTypes from 'prop-types';\nimport css from './ContactListItem.module.css'\n\nexport function ContactListItem({ name, number, onButtonDelete, buttonId }) {\n  \n  return (\n    <li>\n      {name}: <span>{number}</span>\n      <button\n        id={buttonId}\n        onClick={onButtonDelete}\n        className={css.buttonDelete}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string,\n  onButtonDelete: PropTypes.func.isRequired,\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"ContactsList_contactsList__ZQI1L\"};","import { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as contactsOperations from 'redux/contacts/contactsOperations';\nimport { getFilterContacts } from 'redux/contacts/contactsSelectors';\nimport css from './ContactsList.module.css'\n\nexport function ContactsList() {\n\n  const filteredContacts = useSelector(getFilterContacts);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  const handleDelete = event => {\n    dispatch(contactsOperations.deleteContact(event.target.id));\n  };\n  \n  return (\n    <ul className={css.contactsList}>\n      {filteredContacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          name={name}\n          number={number}\n          onButtonDelete={handleDelete}\n          buttonId={id}\n        />\n      ))}\n    </ul>\n  );\n}\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import PropTypes from 'prop-types';\nimport css from './Container.module.css';\n\nexport function Container({ children }) {\n  return <div className={css.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { getContactsFilter } from 'redux/filter/filterSelector';\nimport { setFilter } from 'redux/filter/filterSlice';\n\n\nexport function Filter() {\n\n  const filter = useSelector(getContactsFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = ({ target: { value } }) => {\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <input type=\"text\" name=\"filter\" value={filter} onChange={handleFilter} />\n    </div>\n  );\n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"formContact\":\"Form_formContact__gte1o\",\"buttonSubmit\":\"Form_buttonSubmit__hSzbU\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as contactsOperations from 'redux/contacts/contactsOperations';\nimport css from './Form.module.css'\nimport {getContactsList} from 'redux/contacts/contactsSelectors';\n  \nexport function Form() {\n  \n  const contacts = useSelector(getContactsList);\n\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState(''); \n\n  const handleInputChange = event => {\n    const inputValue = event.target.value;\n    const inputName = event.target.name;\n\n    switch (inputName) {\n      case 'name':\n        setName(inputValue);\n        break;\n      case 'number':\n        setNumber(inputValue);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const contact = {\n      name: name,\n      number: number,\n    };\n\n    addContact(contact);\n\n    setName('');\n    setNumber('');\n  };\n\n  const addContact = contact => {\n    if (\n      contacts.some(\n        contactItem =>\n          contactItem.name.toLowerCase() === contact.name.toLowerCase()\n      )\n    ) {\n      alert(`Oops, ${contact.name} is already in contacts!`);\n      return;\n    }\n    const finalContact = {\n      ...contact,\n    };\n\n    dispatch(contactsOperations.addContact(finalContact));\n    \n  }\n\n  return (\n    <form onSubmit={handleSubmit} className={css.formContact}>\n      <label>\n        <div>Name</div>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        <div>Number</div>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={css.buttonSubmit}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\n","import React from 'react';\nimport { getLoaderStatus, getError } from 'redux/contacts/contactsSelectors';\nimport { useSelector } from 'react-redux';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Container } from 'components/Container/Container';\nimport { Filter } from 'components/Filter/Filter';\nimport { Form } from 'components/Form/Form';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function ContactsPage() {\n  const isLoading = useSelector(getLoaderStatus);\n  const error = useSelector(getError);\n  return (\n    <Container>\n      {error !== null && <p>Ooops, smth is wrong... Message: '{error}'</p>}\n      <h1>Phonebook</h1>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && <Loader />}\n      <ContactsList />\n    </Container>\n  );\n}\n"],"names":["getContactsFilter","state","filterData","getContactsList","contactData","contacts","items","getLoaderStatus","isLoading","getError","error","getFilterContacts","filter","contact","name","toLowerCase","trim","includes","ContactListItem","number","onButtonDelete","buttonId","id","onClick","className","css","ContactsList","filteredContacts","useSelector","dispatch","useDispatch","useEffect","contactsOperations","handleDelete","event","target","map","Container","children","Filter","type","value","onChange","setFilter","Form","useState","setName","setNumber","handleInputChange","inputValue","addContact","some","contactItem","alert","finalContact","onSubmit","preventDefault","pattern","title","required","ContactsPage","Loader"],"sourceRoot":""}