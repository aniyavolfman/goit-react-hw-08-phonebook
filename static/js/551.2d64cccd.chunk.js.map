{"version":3,"file":"static/js/551.2d64cccd.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/filter/filterSelector.js","redux/contacts/contactsSelectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","export const selectContactsFilter = state => state.filterData;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectContactsFilter } from 'redux/filter/filterSelector';\n\nexport const selectContactsList = state => state.contactData.contacts.items;\nexport const selectLoaderStatus = state => state.contactData.isLoading;\nexport const selectError = state => state.contactData.error;\n\nexport const selectFilterContacts = createSelector(\n  [selectContactsList, selectContactsFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().trim().includes(filter.toLowerCase())\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonDelete\":\"ContactListItem_buttonDelete__965SC\"};","import PropTypes from 'prop-types';\nimport css from './ContactListItem.module.css'\n\nexport function ContactListItem({ name, number, onButtonDelete, buttonId }) {\n  \n  return (\n    <li>\n      {name}: <span>{number}</span>\n      <button\n        id={buttonId}\n        onClick={onButtonDelete}\n        className={css.buttonDelete}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string,\n  onButtonDelete: PropTypes.func.isRequired,\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"ContactsList_contactsList__ZQI1L\"};","import { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as contactsOperations from 'redux/contacts/contactsOperations';\nimport { selectFilterContacts } from 'redux/contacts/contactsSelectors';\nimport css from './ContactsList.module.css'\n\nexport function ContactsList() {\n\n  const filteredContacts = useSelector(selectFilterContacts);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  const handleDelete = event => {\n    dispatch(contactsOperations.deleteContact(event.target.id));\n  };\n  \n  return (\n    <ul className={css.contactsList}>\n      {filteredContacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          name={name}\n          number={number}\n          onButtonDelete={handleDelete}\n          buttonId={id}\n        />\n      ))}\n    </ul>\n  );\n}\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import PropTypes from 'prop-types';\nimport css from './Container.module.css';\n\nexport function Container({ children }) {\n  return <div className={css.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContactsFilter } from 'redux/filter/filterSelector';\nimport { setFilter } from 'redux/filter/filterSlice';\n\n\nexport function Filter() {\n\n  const filter = useSelector(selectContactsFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = ({ target: { value } }) => {\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <input type=\"text\" name=\"filter\" value={filter} onChange={handleFilter} />\n    </div>\n  );\n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"formContact\":\"Form_formContact__gte1o\",\"buttonSubmit\":\"Form_buttonSubmit__hSzbU\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as contactsOperations from 'redux/contacts/contactsOperations';\nimport css from './Form.module.css';\nimport { selectContactsList } from 'redux/contacts/contactsSelectors';\n\nexport function Form() {\n  const contacts = useSelector(selectContactsList);\n\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contactMap = {\n    name: setName,\n    number: setNumber,\n  };\n\n  const handleInputChange = ({ target: { name, value } }) => {\n    contactMap[name](value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const contact = {\n      name: name,\n      number: number,\n    };\n\n    addContact(contact);\n\n    setName('');\n    setNumber('');\n  };\n\n  const addContact = contact => {\n    if (\n      contacts.some(\n        contactItem =>\n          contactItem.name.toLowerCase() === contact.name.toLowerCase()\n      )\n    ) {\n      alert(`Oops, ${contact.name} is already in contacts!`);\n      return;\n    }\n    const finalContact = {\n      ...contact,\n    };\n\n    dispatch(contactsOperations.addContact(finalContact));\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.formContact}>\n      <label>\n        <div>Name</div>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        <div>Number</div>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={css.buttonSubmit}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import React from 'react';\nimport { selectLoaderStatus, selectError } from 'redux/contacts/contactsSelectors';\nimport { useSelector } from 'react-redux';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Container } from 'components/Container/Container';\nimport { Filter } from 'components/Filter/Filter';\nimport { Form } from 'components/Form/Form';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function ContactsPage() {\n  const isLoading = useSelector(selectLoaderStatus);\n  const error = useSelector(selectError);\n  return (\n    <Container>\n      {error !== null && <p>Ooops, smth is wrong... Message: '{error}'</p>}\n      <h1>Phonebook</h1>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && <Loader />}\n      <ContactsList />\n    </Container>\n  );\n}\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContactsFilter","state","filterData","selectContactsList","contactData","contacts","items","selectLoaderStatus","isLoading","selectError","error","selectFilterContacts","filter","contact","toLowerCase","trim","includes","ContactListItem","number","onButtonDelete","buttonId","id","onClick","className","css","ContactsList","filteredContacts","useSelector","dispatch","useDispatch","useEffect","contactsOperations","handleDelete","event","target","Container","children","Filter","type","onChange","setFilter","Form","useState","setName","setNumber","contactMap","handleInputChange","addContact","some","contactItem","alert","finalContact","onSubmit","preventDefault","pattern","title","required","ContactsPage","Loader"],"sourceRoot":""}