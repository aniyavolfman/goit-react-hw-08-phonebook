{"version":3,"file":"static/js/288.f907d5f5.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"buttonDelete\":\"ContactListItem_buttonDelete__965SC\"};","import PropTypes from 'prop-types';\nimport css from './ContactListItem.module.css'\n\nexport function ContactListItem({ name, number, onButtonDelete, buttonId }) {\n  \n  return (\n    <li>\n      {name}: <span>{number}</span>\n      <button\n        id={buttonId}\n        onClick={onButtonDelete}\n        className={css.buttonDelete}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string,\n  onButtonDelete: PropTypes.func.isRequired,\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"ContactsList_contactsList__ZQI1L\"};","import { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as contactsOperations from 'redux/contacts/contactsOperations';\nimport { getFilterContacts } from 'redux/contacts/contactsSlice';\nimport css from './ContactsList.module.css'\n\nexport function ContactsList() {\n\n  const filteredContacts = useSelector(getFilterContacts);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  const handleDelete = event => {\n    dispatch(contactsOperations.deleteContact(event.target.id));\n  };\n  \n  return (\n    <ul className={css.contactsList}>\n      {filteredContacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          name={name}\n          number={number}\n          onButtonDelete={handleDelete}\n          buttonId={id}\n        />\n      ))}\n    </ul>\n  );\n}\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import PropTypes from 'prop-types';\nimport css from './Container.module.css';\n\nexport function Container({ children }) {\n  return <div className={css.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { getContactsFilter, setFilter } from 'redux/filter/filterSlice';\n\n\nexport function Filter() {\n\n  const filter = useSelector(getContactsFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = ({ target: { value } }) => {\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <input type=\"text\" name=\"filter\" value={filter} onChange={handleFilter} />\n    </div>\n  );\n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"formContact\":\"Form_formContact__gte1o\",\"buttonSubmit\":\"Form_buttonSubmit__hSzbU\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as contactsOperations from 'redux/contacts/contactsOperations';\nimport css from './Form.module.css'\nimport {getContactsList} from 'redux/contacts/contactsSlice';\n\nexport function Form() {\n  \n  const contacts = useSelector(getContactsList);\n\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState(''); \n\n  const handleInputChange = event => {\n    const inputValue = event.target.value;\n    const inputName = event.target.name;\n\n    switch (inputName) {\n      case 'name':\n        setName(inputValue);\n        break;\n      case 'number':\n        setNumber(inputValue);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const contact = {\n      name: name,\n      number: number,\n    };\n\n    addContact(contact);\n\n    setName('');\n    setNumber('');\n  };\n\n  const addContact = contact => {\n    if (\n      contacts.some(\n        contactItem =>\n          contactItem.name.toLowerCase() === contact.name.toLowerCase()\n      )\n    ) {\n      alert(`Oops, ${contact.name} is already in contacts!`);\n      return;\n    }\n    const finalContact = {\n      ...contact,\n    };\n\n    dispatch(contactsOperations.addContact(finalContact));\n    \n  }\n\n  return (\n    <form onSubmit={handleSubmit} className={css.formContact}>\n      <label>\n        <div>Name</div>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        <div>Number</div>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={css.buttonSubmit}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\n","import React from 'react';\nimport { getLoaderStatus, getError } from 'redux/contacts/contactsSlice';\nimport { useSelector } from 'react-redux';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Container } from 'components/Container/Container';\nimport { Filter } from 'components/Filter/Filter';\nimport { Form } from 'components/Form/Form';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function ContactsPage() {\n  const isLoading = useSelector(getLoaderStatus);\n  const error = useSelector(getError);\n  return (\n    <Container>\n      {error !== null && <p>Ooops, smth is wrong... Message: '{error}'</p>}\n      <h1>Phonebook</h1>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && <Loader />}\n      <ContactsList />\n    </Container>\n  );\n}\n"],"names":["ContactListItem","name","number","onButtonDelete","buttonId","id","onClick","className","css","ContactsList","filteredContacts","useSelector","getFilterContacts","dispatch","useDispatch","useEffect","contactsOperations","handleDelete","event","target","map","Container","children","Filter","filter","getContactsFilter","type","value","onChange","setFilter","Form","contacts","getContactsList","useState","setName","setNumber","handleInputChange","inputValue","addContact","contact","some","contactItem","toLowerCase","alert","finalContact","onSubmit","preventDefault","pattern","title","required","ContactsPage","isLoading","getLoaderStatus","error","getError","Loader"],"sourceRoot":""}